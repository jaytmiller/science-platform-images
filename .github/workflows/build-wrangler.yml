name: Notebook Wrangler Build
on:
   push:
      branches:
        - main
      paths:
        - "nbw-spec-archive/**"
   workflow_dispatch:
jobs:
  docker:
    name: Notebook Wrangler Build Image
    runs-on: ubuntu-22.04
    permissions:
        packages: write

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
         root-reserve-mb: 512
         swap-size-mb: 1024
         remove-dotnet: 'true'
         remove-android: 'true'

      - name: Free Disk Space,  Enlarge Swapfile
        shell: bash
        run: |
          echo "Free space:"  $(df -h)
          sudo apt clean
          # docker rmi $(docker image ls -aq)
          # docker container prune -f
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
          # sudo swapoff -a
          # sudo rm -f /swapfile
          # sudo fallocate -l 24G /swapfile
          # sudo chmod 0600 /swapfile
          # sudo mkswap /swapfile
          # sudo swapon /swapfile
          cat /proc/meminfo
          echo "Free space:"  $(df -h)

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Configure
        shell: bash
        run: |
          git config --global user.email "dmd_octarine@stsci.edu"
          git config --global user.name "Wrangler workflow"
          scripts/image-configure wrangler --base-notebook minimal-notebook

      - name: Set Up Environment
        shell: bash
        run: |
          pip install -r requirements.txt
          pip install git+https://github.com/spacetelescope/nb-wrangler.git
          curl https://raw.githubusercontent.com/spacetelescope/nb-wrangler/refs/heads/main/nb-wrangler >nb-wrangler
          chmod +x nb-wrangler
          ./nb-wrangler bootstrap

      - name: Validate Repo Changes
        shell: bash
        run: |
            # Change set can add one and only one spec
            set -o pipefail
            if git diff --name-status HEAD^ HEAD | grep -v -E 'A\s+nbw-spec-archive/nbw-.*\.yaml'; then
                echo "PR change set includes more than a single wrangler spec, REJECTED."
                false
            fi

      - name: Install and Validate Spec
        shell: bash
        run: |
          set -x
          set -o pipefail
          NBW_WRANGLER_SPEC=$(find nbw-spec-archive/ -name "*.yaml" -type f | sort | tail -1)
          cp -v ${NBW_WRANGLER_SPEC} deployments/wrangler/environments/nbw-wrangler-spec.yaml
          source ./nb-wrangler environment
          ./nb-wrangler deployments/wrangler/environments/nbw-wrangler-spec.yaml --validate --verbose

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Image Build
        shell: bash
        run: |
           echo "Free space:"  $(df -h)
           source setup-env
           scripts/image-build
           echo "Free space:"  $(df -h)
           docker system df
           docker system prune
           docker image ls
           echo "Free space:"  $(df -h)

      - name: Image Functional Tests
        shell: bash
        run: |
           echo "Free space:"  $(df -h)
           source setup-env
           scripts/image-test
           echo "Free space:"  $(df -h)

      - name: Image Push
        shell: bash
        run: |
            set -o pipefail
            set -x
            # source setup-env
            echo "Free space:"  $(df -h)
            export NBW_WRANGLER_SPEC=$(find nbw-spec-archive/ -name "*.yaml" -type f | head -1)
            export GITHUB_TAG=$(basename ${NBW_WRANGLER_SPEC} .yaml)
            export BUILT_IMAGE_HASH=$(docker image ls | head -2 | awk '{print $3;}' | tail -1)
            export GITHUB_UNTAGGED_ID=ghcr.io/${{ github.repository }}
            export GITHUB_IMAGE_ID=${GITHUB_UNTAGGED_ID}:${GITHUB_TAG}
            docker tag ${BUILT_IMAGE_HASH} ${GITHUB_IMAGE_ID}
            docker push $GITHUB_IMAGE_ID

      # ----- - name: Image Repack Slim   (XXXX runs out of disk space)
      # -----   shell: bash
      # -----   run: |
      # sudo apt-get install gh skopeo
      # wget https://github.com/orf/docker-repack/releases/download/v0.5.0/docker-repack-Linux-x86_64.tar.gz
      # tar zxf docker-repack-Linux-x86_64.tar.gz
      # chmod +x docker-repack
      # mv docker-repack scripts
      # -----       source setup-env
      # -----       image-repack $NOTEBOOK_ID

      # ----- - name: Slim Image Push
      # -----   shell: bash
      # -----   run: |
      # -----       export NBW_WRANGLER_SPEC=$(find nbw-spec-archive/ -name "*.yaml" -type f | head -1)
      # -----       export GITHUB_TAG=$(basename ${NBW_WRANGLER_SPEC} .yaml)
      # -----       export BUILT_IMAGE_HASH=$(docker image ls | head -2 | awk '{print $3;}' | tail -1)
      # -----       export GITHUB_IMAGE_ID_SLIM=${GITHUB_UNTAGGED_ID}:${GITHUB_TAG}-slim.yaml
      # -----       docker tag ${BUILT_IMAGE_HASH} ${GITHUB_IMAGE_ID_SLIM}
      # -----       docker push ${GITHUB_IMAGE_ID_SLIM}

      # XXXX Trivy missing config to run from built image, fails
      # ----- - name: Run Trivy vulnerability scanner on image
      # -----   uses: aquasecurity/trivy-action@master
      # -----   with:
      # -----     scan-type: image
      # -----     image-ref: notebook-${{ matrix.DEPLOYMENT_NAME }}
      # -----     ignore-unfixed: true
      # -----     format: table
      # -----     vuln-type: os,library
      # -----     severity: 'CRITICAL,HIGH,MEDIUM'
